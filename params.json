{
  "name": "Fuzzywuzzy",
  "tagline": "Java fuzzy string matching implemenation of the well known Python's fuzzywuzzy algorithm",
  "body": "# JavaWuzzy\r\n[![Build Status](https://travis-ci.org/xdrop/fuzzywuzzy.svg?branch=master)](https://travis-ci.org/xdrop/fuzzywuzzy)  [ ![Download](https://api.bintray.com/packages/xdrop/FuzzyWuzzy-Java/fuzzywuzzy/images/download.svg) ](https://bintray.com/xdrop/FuzzyWuzzy-Java/fuzzywuzzy/_latestVersion)\r\n\r\n## FuzzyWuzzy Java Implementation\r\nFuzzy string matching for java based on the [FuzzyWuzzy](https://github.com/seatgeek/fuzzywuzzy) Python algorithm. The algorithm uses [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance) to calculate similarity between strings.\r\n\r\nI've personally needed to use this but all of the other Java implementations out there either had a crazy amount of\r\ndependencies, or simply did not output the correct results as the python one, so I've decided to properly re-implement\r\nthis in Java. Enjoy!\r\n\r\n\r\n* No dependencies!\r\n* Includes implementation of the super-fast [python-Levenshtein](https://github.com/ztane/python-Levenshtein/) in Java!\r\n* Simple to use!\r\n* Credits to the great folks at seatgeek for coming up with the algorithm ([More here](http://chairnerd.seatgeek.com/fuzzywuzzy-fuzzy-string-matching-in-python/))\r\n\r\n\r\n## Installation\r\n### Maven Central\r\n```xml\r\n<dependency>\r\n    <groupId>me.xdrop</groupId>\r\n    <artifactId>fuzzywuzzy</artifactId>\r\n    <version>1.1.5</version>\r\n</dependency>\r\n```\r\n\r\n### Gradle\r\n```gradle\r\ncompile 'me.xdrop:fuzzywuzzy:1.1.5'\r\n```\r\n\r\n### Jar release\r\nDownload the latest release [here](https://github.com/xdrop/fuzzywuzzy/releases) and add to your classpath\r\n\r\n## Usage\r\n\r\n#### Simple Ratio\r\n```groovy\r\nFuzzySearch.ratio(\"mysmilarstring\",\"myawfullysimilarstirng\")\r\n72\r\n\r\nFuzzySearch.ratio(\"mysmilarstring\",\"mysimilarstring\")\r\n97\r\n\r\n```\r\n\r\n#### Partial Ratio\r\n```groovy\r\nFuzzySearch.partialRatio(\"similar\", \"somewhresimlrbetweenthisstring\")\r\n71\r\n```\r\n\r\n#### Token Sort Ratio\r\n```groovy\r\nFuzzySearch.tokenSortPartialRatio(\"order words out of\",\"  words out of order\")\r\n100\r\nFuzzySearch.tokenSortRatio(\"order words out of\",\"  words out of order\")\r\n100\r\n```\r\n\r\n#### Token Set Ratio\r\n```groovy\r\nFuzzySearch.tokenSetRatio(\"fuzzy was a bear\", \"fuzzy fuzzy fuzzy bear\")\r\n100\r\nFuzzySearch.tokenSetPartialRatio(\"fuzzy was a bear\", \"fuzzy fuzzy fuzzy bear\")\r\n100\r\n```\r\n\r\n#### Weighted Ratio\r\n```groovy\r\nFuzzySearch.weightedRatio(\"The quick brown fox jimps ofver the small lazy dog\", \"the quick brown fox jumps over the small lazy dog\")\r\n97\r\n```\r\n\r\n#### Extract\r\n```groovy\r\n// groovy\r\n\r\nFuzzySearch.extractOne(\"cowboys\", [\"Atlanta Falcons\", \"New York Jets\", \"New York Giants\", \"Dallas Cowboys\"])\r\n(string: Dallas Cowboys, score: 90)\r\n```\r\n```groovy\r\nFuzzySearch.extractTop(\"goolge\", [\"google\", \"bing\", \"facebook\", \"linkedin\", \"twitter\", \"googleplus\", \"bingnews\", \"plexoogl\"], 3)\r\n[(string: google, score:83), (string: googleplus, score:63), (string: plexoogl, score:43)]\r\n```\r\n```groovy\r\nFuzzySearch.extractAll(\"goolge\", [\"google\", \"bing\", \"facebook\", \"linkedin\", \"twitter\", \"googleplus\", \"bingnews\", \"plexoogl\"]);\r\n[(string: google, score:83), (string: bing, score:20), (string: facebook, score:29), (string: linkedin, score:29), (string: twitter, score:15), (string: googleplus, score:63), (string: bingnews, score:29), (string: plexoogl, score:43)]\r\n// score cutoff\r\nFuzzySearch.extractAll(\"goolge\", [\"google\", \"bing\", \"facebook\", \"linkedin\", \"twitter\", \"googleplus\", \"bingnews\", \"plexoogl\"], 40) \r\n[(string: google, score:83), (string: googleplus, score:63), (string: plexoogl, score:43)]\r\n```\r\n```groovy\r\nFuzzySearch.extractSorted(\"goolge\", [\"google\", \"bing\", \"facebook\", \"linkedin\", \"twitter\", \"googleplus\", \"bingnews\", \"plexoogl\"]);\r\n[(string: google, score:83), (string: googleplus, score:63), (string: plexoogl, score:43), (string: facebook, score:29), (string: linkedin, score:29), (string: bingnews, score:29), (string: bing, score:20), (string: twitter, score:15)]\r\n// score cutoff\r\nFuzzySearch.extractSorted(\"goolge\", [\"google\", \"bing\", \"facebook\", \"linkedin\", \"twitter\", \"googleplus\", \"bingnews\", \"plexoogl\"], 3);\r\n[(string: google, score:83), (string: googleplus, score:63), (string: plexoogl, score:43)]\r\n```\r\n\r\n## Credits\r\n\r\n- seatgeek\r\n- Adam Cohen\r\n- David Necas (python-Levenshtein)\r\n- Mikko Ohtamaa (python-Levenshtein)\r\n- Antti Haapala (python-Levenshtein)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}